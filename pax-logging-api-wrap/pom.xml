<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.hitachivantara</groupId>
    <artifactId>third-party-bundle-wraps</artifactId>
    <version>1.0.3-SNAPSHOT</version>
  </parent>

  <artifactId>pax-logging-api-wrap</artifactId>
  <!-- We are mirroring the wrapped version of pax logging -->
  <version>2.2.7</version>
  <packaging>bundle</packaging>

  <description>
    This OSGi bundle wraps the org.ops4j.pax.logging/pax-logging-api bundle preventing it
    from exporting packages from the logging APIs the Pentaho products use and inject from
    the main classloader (org.apache.commons.logging, org.apache.log4j, org.apache.logging.log4j
    and org.slf4j).
  </description>

  <properties>
    <!-- When eventually upgrading this version, take care of also verifying and updating if needed
         the manifest configuration bellow. -->
    <pax-logging-api.version>2.2.7</pax-logging-api.version>
    <log4j.version>2.17.1</log4j.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.ops4j.pax.logging</groupId>
      <artifactId>pax-logging-api</artifactId>
      <version>${pax-logging-api.version}</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <version>5.1.9</version>
<!--        <extensions>true</extensions>-->
<!--        <dependencies>-->
<!--          <dependency>-->
<!--            <groupId>biz.aQute.bnd</groupId>-->
<!--            <artifactId>biz.aQute.bndlib</artifactId>-->
<!--            <version>6.4.1</version>-->
<!--            <scope>compile</scope>-->
<!--          </dependency>-->
<!--        </dependencies>-->
        <configuration>
          <obrRepository>NONE</obrRepository>
          <instructions>
            <_bundleannotations />
            <!--
              Using inline=true. bnd tool FAQ (https://bnd.bndtools.org/chapters/920-faq.html) states:
                "Bundle-ClassPath [...] creates unnecessary complexity, it is slower, and it is not necessary.
                It will also not be compatible with techniques like PojoSR, something that the OSGi is looking
                into standardizing. [...] If you really need to wrap one or more JARs, use the Include-Resource
                instruction, it has an option to unroll a JAR resource [...]. This will copy all its contents in
                the target JAR.
            -->
            <Embed-Dependency>pax-logging-api;inline=true</Embed-Dependency>

            <Bundle-Name>OPS4J Pax Logging - API (HV wrapped)</Bundle-Name>
            <Bundle-SymbolicName>${project.groupId}.${project.artifactId}</Bundle-SymbolicName>
            <Bundle-Version>${project.version}</Bundle-Version>

            <!--
              Configurations based on:
                https://github.com/ops4j/org.ops4j.pax.logging/blob/logging-2.2.7/pax-logging-api/osgi.bnd
              And MANIFEST.MF from an official pax-logging-api version 2.2.7

              Removed any exports of the org.apache.commons.logging, org.apache.log4j, org.apache.logging.log4j
              and org.slf4j packages and sub-packages.

              Recheck and update them when upgrading the pax-logging-api version.
            -->
            <Manifest-Version>1.0</Manifest-Version>
            <Bundle-ManifestVersion>2</Bundle-ManifestVersion>
            <Bundle-Activator>org.ops4j.pax.logging.internal.Activator</Bundle-Activator>

            <Export-Package>
              org.ops4j.pax.logging.slf4j;uses:="org.ops4j.pax.logging";provider=paxlogging;version="2.2.7",
              org.apache.juli.logging;uses:="org.ops4j.pax.logging";provider=paxlogging;version="9.0.27",
              org.apache.juli.logging;provider=paxlogging;version="8.5.40",
              org.apache.juli.logging;provider=paxlogging;version="7.0.94",
              org.apache.juli.logging;provider=paxlogging;version="6.0.18",
              org.apache.juli.logging;provider=paxlogging;version="5.5.28",
              org.apache.avalon.framework.logger;uses:="org.apache.log";provider=paxlogging;version="4.3",
              org.ops4j.pax.logging.avalon;uses:="org.apache.avalon.framework.logger,org.ops4j.pax.logging";provider=paxlogging;version="2.2.7",
              org.jboss.logging;provider=paxlogging;version="3.4.1.Final",
              org.jboss.logging;provider=paxlogging;version="3.3.0.Final",
              org.knopflerfish.service.log;uses:="org.osgi.framework,org.osgi.service.log";provider=paxlogging;version="1.2.0",
              org.knopflerfish.service.log;provider=paxlogging;version="1.1.0",
              org.ops4j.pax.logging;uses:="org.knopflerfish.service.log,org.osgi.framework,org.osgi.service.log,org.osgi.util.tracker";provider=paxlogging;version="2.2.7",
              org.ops4j.pax.logging.spi;provider=paxlogging;version="2.2.7",
              org.osgi.service.log;uses:="org.osgi.framework";version="1.4"
            </Export-Package>

            <Import-Package>
              org.osgi.framework; version="[1.0.0,2.0.0)",
              org.osgi.framework.wiring; version="[1.0.0,2.0.0)",
              org.osgi.util.tracker; version="[1.0.0,2.0.0)",
              org.osgi.service.event; version="[1.0.0,2.0.0)"; resolution:=optional,
              org.osgi.service.log; version="[1.4.0,2.0.0)",
              org.osgi.service.log.admin; version="[1.0,2.0)"; resolution:=optional,
              org.osgi.service.log.stream; version="[1.0,2.0)"; resolution:=optional,
              org.apache.log; resolution:=optional,
              javax.xml.parsers,
              org.w3c.dom
            </Import-Package>
          </instructions>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>
